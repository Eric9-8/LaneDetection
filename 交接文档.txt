*表示主要脚本
执行过程：
1.检查CULane_dataset.py和Cdataset.py中读取txt文件是否为目标文件，其中CULane_dataset.py是每一轮次中三个模型都要读取的数据集，后缀为_gt_do_adam.txt；
	Cdataset.py是执行AL过程中读取的{set_i}_gt_re.txt数据集；
	对应为do_main.py中datasets和select_set两个函数中的相关内容；
	注：由于第0轮次训练的数据集为原始数据训练集的一半，故验证集也为原始的一半，此后训练集数量逐渐增加，但验证机数量一直为原始的1/2.
2.检查do_main.py parse_args函数中路径
3.检查do_main.py - dataset函数中图像增广策略
4.检查do_main.py - div函数中k的取值，表示反向KNN中考虑的k个最近邻，默认为4个
5.检查do_main.py -score函数中topk取值，表示每轮次在set.txt中筛选出多少数据，默认为500
6.检查do_main.py -active_learning函数中保存筛选出的数据时，路径要与原始数据集路径(CULane_dataset.py中)一致，以便下一轮次加载
7.检查do_main.py -main函数中循环起始轮次为0
8.执行do_main.py文件，开始第0轮次的训练，其中student和teacher执行并行训练，待其执行完毕，自动训练KD模型；
	当前轮次三个模型训练完毕，自动执行AL数据挑选过程；
9.训练将相关记录和最佳epoch的参数保存在步骤2中的路径下
10.执行_mIoU.py，修改_mIoU.py中指定的轮次数r、对应模型及其参数路径，用于计算Accuracy、mIoU、F1等指标

目录
LaneDetection2

--_mIoU.py # 主要测试脚本*
--CULane_dataset_random.py
--do_main.py # 主要执行脚本*
--lr_scheduler.py # 主要warmup学习率策略*
--randomtest.py

--list # 包含了分割好的set.txt数据集和用于训练的gt_do_adam.txt数据集，可用于替换原始CULane数据集中的list文件夹

--Active_learning
     ----random_split.py # 划分为44个set.txt数据集
     ----Cdataset.py # AL读取set.txt生成数据集
     ----calculate.py 

--Student
     ----new_log
     ----new_log_v3 # v3表示是采用adam以及adamw优化，之前使用SGD
     ----utils
            ----transforms # 图像增广
	     ----data_augmentation.py
	     ----transforms.py
            ----CULane_dataset.py # 主要数据集读取*
            ----lr_scheduler.py # 之前的warmup学习率策略
            ----my_regnet.py # 设置regnet中卷积为空洞卷积
            ----my_unet.py # student设置的unet结构(kd和student相同)
     ----config.json 
     ----model.py # student模型
     ----model_KD.py # 蒸馏(KD)模型
     ----train.py # 单独训练student模型，可用于单独训练student模型，其具体结构参数以do_main.py为准
     ----train_kd.py # 单独训练kd模型，可用于单独训练KD模型，其具体结构参数以do_main.py为准

--Teacher
     ----new_log
     ----new_log_v3
     ----config.json
     ----model.py # teacher模型
     ----train.py # 单独训练teacher模型，可用于单独训练teacher模型，其具体结构参数以do_main.py为准
     ----unet_T.py # teacher设置的unet结构
